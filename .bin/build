#!/bin/bash
# Build directory for running go code

cwd=$(pwd)
year=$(date +'%Y')
day=$(date +'%-d')
language=go

while getopts d:y:l: flag
do
    case "${flag}" in
        y) year=${OPTARG};;
        d) day=${OPTARG};;
        l) language=${OPTARG};;
    esac
done

day_dir="$year/day$day"

echo -e "Checking for $day_dir..."

if [[ -d "$day_dir" ]]; then
    echo "$day_dir already exists, not creating"
else
    echo "Creating $day_dir directory..."
    mkdir -p $day_dir
fi

cd $day_dir

if [ $language == "go" ]; then
    if [[ -f "main.go" ]]; then
        echo "main.go already exists, not creating"
        exit 0
    else
        echo "Adding base files"
        touch test_case.txt
        touch input.txt
        
    cat >> main.go <<EOL
package main

import (
	"fmt"

	"github.com/jsonunger/advent-of-code/utils"
)

func part1(lines []string) interface{} {
	return nil
}

func part2(lines []string) interface{} {
	return nil
}

func main() {
	testCase := utils.ReadLines("./$day_dir/test_case.txt")
	input := utils.ReadLines("./$day_dir/input.txt")

	// PART 1
	fmt.Printf("PART 1 EXAMPLE: %v\n", part1(testCase))
	fmt.Printf("PART 1 RESULT: %v\n", part1(input))

	// // PART 2
	// fmt.Printf("PART 2 EXAMPLE: %v\n", part2(testCase))
	// fmt.Printf("PART 2 RESULT: %v\n", part2(input))
}
EOL
    fi
    elif [ $language == "rb" ]; then
    if [[ -f "index.rb" ]]; then
        echo "index.rb already exists, not creating"
        exit 0
    else
        echo "Adding base files"
        touch test_case.txt
        touch input.txt
        
    cat >> index.rb <<EOL
require('../../rb_utils/load_file')

test_case = load_file_lines('./test_case.txt')
# input = load_file_lines('./input.txt')

def run_part_1(lines)
    lines
end

puts "Test Case: #{run_part_1(test_case)}"
# puts "Input: #{run_part_1(input)}"

def run_part_2(lines)
    lines
end

# puts "Test Case Part 2: #{run_part_2(test_case)}"
# puts "Input Part 2: #{run_part_2(input)}"
EOL
    fi
fi
